package class__;

public class StringMain {

	public	StringMain() { // 기본 생성자
		String aa = "apple"; // literal
		String bb = "apple"; // literal, ※ 똑같은 내용의 문자열 리터럴은 메모리에 1번만 생성된다. 
		
		if(aa==bb) System.out.println("aa와 bb의 참조값은 같다.");
		else System.out.println("aa와 bb의 참조값은 다르다");
		
		if(aa.equals(bb)) System.out.println("aa와 bb의 문자열은 같다.");
		else System.out.println("aa와 bb의 문자열은 다르다");
		System.out.println();
		
		String cc = new String("apple");
		String dd = new String("apple");
		if(cc==dd) System.out.println("cc와 dd의 참조값은 같다");
		else System.out.println("cc와 dd의 참조값은 다르다");

		if(cc.equals(dd)) System.out.println("cc와 dd의 문자열은 같다");
		else System.out.println("cc와 dd의 문자열은 다르다");
		System.out.println();
		
		String e = " 오늘 날짜는 " + 2024 + 07 + 12 ; // String 으로 연산은 피해야 한다.
		System.out.println(" e = " + e);
		
		/*
		 "오늘 날짜는 "
		 "오늘 날짜는 2024 "
		 "오늘 날짜는 202407 "
		 e ---> "오늘 날짜는 20240712 " 주소값 전달.
		 
		 메모리가 꽉 차서 더이상 생성이 안된다면
		 -> JVM에 의해서 휴지통(Garbage Collector)으로 보낸다. 
		 -> JVM에 의해서 휴지통(Garbage Collector)으로 보내는 동안은 컴퓨터는 작동을 멈춘다. :: 관건 임... load balance 에 의해 정리 (cloud) 
		 
		 */
		
			System.out.println("문자열 크기 = " + e.length());
			
			System.out.println("5번째 위치의 문자 = " + e.charAt(5)); // 는
			
			System.out.println("부분 문자열 추출 = " + e.substring(7));
			System.out.println("부분 문자열 추출 = " + e.substring(7, 11));
			
			System.out.println("대문자 변경 = "   + "Hello".toUpperCase());
			System.out.println("소문자 변경 = "    + "Hello".toLowerCase());
			
			System.out.println("문자열 검색 = " + e.indexOf("짜"));
			System.out.println("문자열 검색 = " + e.indexOf("날짜"));
			System.out.println("문자열 검색 = " + e.indexOf("개바부")); // -1
			
			System.out.println("문자열 치환 = " + e.replace("날짜", "일자"));
		
		
		}
		
	public static void main(String[] args) {
		
		new StringMain();
		
		
		

	}

}
